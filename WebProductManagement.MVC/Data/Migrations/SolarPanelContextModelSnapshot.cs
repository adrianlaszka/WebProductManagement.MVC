// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebProductManagement.MVC.Data;

#nullable disable

namespace SolarSystem.Migrations
{
    [DbContext(typeof(SolarPanelContext))]
    partial class SolarPanelContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DataAccessLayer.DataTable.Location", b =>
            {
                b.Property<int>("ID")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                b.Property<int>("NumberOfProducts")
                    .HasColumnType("int");

                b.Property<int>("ProductID")
                    .HasColumnType("int");

                b.Property<int>("WarehouseID")
                    .HasColumnType("int");

                b.HasKey("ID");

                b.HasIndex("ProductID");

                b.HasIndex("WarehouseID");

                b.ToTable("Locations");
            });

            modelBuilder.Entity("DataAccessLayer.DataTable.Product", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                b.Property<int>("InStock")
                    .HasColumnType("int");

                b.Property<int>("MaxPerCell")
                    .HasColumnType("int");

                b.Property<decimal>("Price")
                    .HasColumnType("decimal(18,2)");

                b.Property<string>("ProductName")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.HasKey("Id");

                b.ToTable("Products");
            });

            modelBuilder.Entity("DataAccessLayer.DataTable.ProjectDetails", b =>
            {
                b.Property<int>("ID")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                b.Property<string>("customerData")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("projectDescription")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("projectLocation")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<int>("workCost")
                    .HasColumnType("int");

                b.Property<int>("workDuration")
                    .HasColumnType("int");

                b.HasKey("ID");

                b.ToTable("ProjectDetails");
            });

            modelBuilder.Entity("DataAccessLayer.DataTable.ProjectProductList", b =>
            {
                b.Property<int>("ID")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                b.Property<int>("ProductID")
                    .HasColumnType("int");

                b.Property<int>("ProjectID")
                    .HasColumnType("int");

                b.HasKey("ID");

                b.HasIndex("ProductID");

                b.HasIndex("ProjectID");

                b.ToTable("ProjectProductLists");
            });

            modelBuilder.Entity("DataAccessLayer.DataTable.ProjectStatus", b =>
            {
                b.Property<int>("ID")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                b.Property<int>("projectCurrentStat")
                    .HasColumnType("int");

                b.Property<int>("projectID")
                    .HasColumnType("int");

                b.Property<DateTime>("statusChanged")
                    .HasColumnType("datetime2");

                b.HasKey("ID");

                b.HasIndex("projectID");

                b.ToTable("ProjectStatuses");
            });

            modelBuilder.Entity("DataAccessLayer.DataTable.Warehouse", b =>
            {
                b.Property<int>("ID")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                b.Property<int>("cell")
                    .HasColumnType("int");

                b.Property<int>("col")
                    .HasColumnType("int");

                b.Property<int>("row")
                    .HasColumnType("int");

                b.HasKey("ID");

                b.ToTable("Warehouses");
            });

            modelBuilder.Entity("DataAccessLayer.DataTable.Location", b =>
            {
                b.HasOne("DataAccessLayer.DataTable.Product", "Product")
                    .WithMany()
                    .HasForeignKey("ProductID")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("DataAccessLayer.DataTable.Warehouse", "Warehouse")
                    .WithMany()
                    .HasForeignKey("WarehouseID")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Product");

                b.Navigation("Warehouse");
            });

            modelBuilder.Entity("DataAccessLayer.DataTable.ProjectProductList", b =>
            {
                b.HasOne("DataAccessLayer.DataTable.Product", "Product")
                    .WithMany()
                    .HasForeignKey("ProductID")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("DataAccessLayer.DataTable.ProjectDetails", "ProjectDetails")
                    .WithMany()
                    .HasForeignKey("ProjectID")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Product");

                b.Navigation("ProjectDetails");
            });

            modelBuilder.Entity("DataAccessLayer.DataTable.ProjectStatus", b =>
            {
                b.HasOne("DataAccessLayer.DataTable.ProjectDetails", "ProjectDetails")
                    .WithMany()
                    .HasForeignKey("projectID")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("ProjectDetails");
            });
#pragma warning restore 612, 618
        }
    }
}
